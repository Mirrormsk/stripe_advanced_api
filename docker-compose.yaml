version: '3.9'

services:
  app:
    build: .
    command: "gunicorn -w 2 config.wsgi:application -b 0.0.0.0:8000 "
#    command: "poetry run python3 manage.py runserver 0.0.0.0:8000"

    platform: linux/amd64
    restart: on-failure
    volumes:
      - .:/code
      - static:./static/
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy

    env_file:
      - .env.prod
    networks:
      - app-network


  db:
    image: postgres:latest
    env_file:
      - .env.prod
    environment:
      ENV_FILE: .env.prod
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_HOST: db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

    expose:
      - "5432"
    networks:
      - app-network

  web:
    image: nginx:latest
    volumes:
      - "./code:/var/www/html"
    ports:
      - "80:80"

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  static:

